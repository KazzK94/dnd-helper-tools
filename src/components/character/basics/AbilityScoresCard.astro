---
import AbilityScoreCard from "./AbilityScoreCard.astro";
import MaterialIcon from "../../ui/MaterialIcon.astro";
import BlockCard from '../../ui/BlockCard.astro'

/**
 * AbilityScoresSection component
 *
 * Displays a grid of ability scores with their modifiers
 *
 * Usage:
 * <AbilityScoresSection abilityScores={{ strength: 10, dexterity: 12, ... }} />
 */

// Define ability score data structure
interface AbilityScoreData {
  name: string;
  abbr: string;
}

// Define the props interface
interface Props {
  abilityScores: {
    strength: number;
    dexterity: number;
    constitution: number;
    intelligence: number;
    wisdom: number;
    charisma: number;
  };
}

// Mapping of ability scores with their display information
const ABILITY_SCORE_DATA: Record<
  keyof Props["abilityScores"],
  AbilityScoreData
> = {
  strength: { name: "Strength", abbr: "STR" },
  dexterity: { name: "Dexterity", abbr: "DEX" },
  constitution: { name: "Constitution", abbr: "CON" },
  intelligence: { name: "Intelligence", abbr: "INT" },
  wisdom: { name: "Wisdom", abbr: "WIS" },
  charisma: { name: "Charisma", abbr: "CHA" },
};

const { abilityScores } = Astro.props;
---

<BlockCard>
  <Fragment slot="title">
    <MaterialIcon icon="person_play" />
    Ability Scores
  </Fragment>

  <div slot="content" class="grid grid-cols-3 gap-4 px-4 py-3">
    {
      Object.entries(ABILITY_SCORE_DATA).map(([key, data]) => (
        <AbilityScoreCard
          name={data.name}
          abbr={data.abbr}
          score={abilityScores[key as keyof typeof abilityScores]}
        />
      ))
    }
  </div>
</BlockCard>
